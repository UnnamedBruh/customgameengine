/**
 * @license
 * Copyright 2022 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */
"use strict";let language="en";function init(){const e=[];for(const t in LANGUAGE_NAME)e.push([LANGUAGE_NAME[t],t]);e.sort((function(e,t){return e[0]>t[0]?1:e[0]<t[0]?-1:0}));const t=document.getElementById("languageDropdown");for(let o=0;o<e.length;o++){const n=e[o],s=n[n.length-1],l=new Option(n[0],s);s===language&&(l.selected=!0),t.options.add(l)}let o=null;try{o=window.sessionStorage.getItem("loadOnceBlocks"),window.sessionStorage.removeItem("loadOnceBlocks"),o=JSON.parse(o)}catch(e){console.log(e)}toolboxJson.contents[0].name=getMsg("Logic"),toolboxJson.contents[1].name=getMsg("Loops"),toolboxJson.contents[2].name=getMsg("Math"),toolboxJson.contents[3].name=getMsg("Text"),toolboxJson.contents[4].name=getMsg("Lists"),toolboxJson.contents[5].name=getMsg("Colour"),toolboxJson.contents[7].name=getMsg("Variables"),toolboxJson.contents[8].name=getMsg("Procedures");let n=JSON.stringify(toolboxJson);n=n.replace(/%\{BKY_VARIABLES_DEFAULT_NAME\}/g,Blockly.Msg.VARIABLES_DEFAULT_NAME);const s=JSON.parse(n),l=Blockly.inject("blocklyDiv",{media:"./node_modules/blockly/media/",toolbox:s,rtl:LANGUAGE_RTL.includes(language)});Blockly.serialization.workspaces.load(o||startBlocks,l),l.addChangeListener(regenerate)}function getMsg(e){let t=msgs.en[e];try{t=msgs[language][e]||t}catch(e){}return t}function languageChange(){const e=JSON.stringify(Blockly.serialization.workspaces.save(Blockly.getMainWorkspace()));try{window.sessionStorage.setItem("loadOnceBlocks",e)}catch(e){console.log(e)}const t=document.getElementById("languageDropdown").value;window.location.search="?hl="+encodeURIComponent(t)}function regenerate(e){if(Blockly.getMainWorkspace().isDragging())return;const t=document.getElementById("generateDropdown").value,o=window[t][`${t}Generator`];document.getElementById("playButton").style.display="javascript"===t?"block":"none";const n=o.workspaceToCode(Blockly.getMainWorkspace()),s=document.getElementById("codeHolder");s.innerHTML="",s.classList.remove("prettyprinted"),s.appendChild(document.createTextNode(n)),"object"==typeof PR&&PR.prettyPrint()}function execute(){const e=javascript.javascriptGenerator.workspaceToCode(Blockly.getMainWorkspace()),t=new Interpreter(e,(function(e,t){e.setProperty(t,"alert",e.createNativeFunction((function(e){return window.alert(arguments.length?e:"")})));e.setProperty(t,"prompt",e.createNativeFunction((function(e,t){return window.prompt(arguments.length>0?e:"",arguments.length>1?t:"")})))}));let o=1e4;for(;t.step()&&o;)o--;if(!o)throw EvalError("Infinite loop.")}!function(){const e=location.search.match(/[?&]hl=([^&]+)($|&)/);e&&LANGUAGE_NAME[e[1]]&&(language=e[1]),document.write('<script src="./node_modules/blockly/msg/'+language+'.js"><\/script>\n')}();const startBlocks={blocks:{languageVersion:0,blocks:[{type:"variables_set",x:10,y:10,fields:{VAR:{id:"Count"}},inputs:{VALUE:{block:{type:"math_number",fields:{NUM:1}}}},next:{block:{type:"controls_whileUntil",fields:{MODE:"WHILE"},inputs:{BOOL:{block:{type:"logic_compare",fields:{OP:"LTE"},inputs:{A:{block:{type:"variables_get",fields:{VAR:{id:"Count"}}}},B:{block:{type:"math_number",fields:{NUM:3}}}}}},DO:{block:{type:"text_print",inputs:{TEXT:{block:{type:"text",fields:{TEXT:"Hello World!"}}}},next:{block:{type:"variables_set",fields:{VAR:{id:"Count"}},inputs:{VALUE:{block:{type:"math_arithmetic",fields:{OP:"ADD"},inputs:{A:{block:{type:"variables_get",fields:{VAR:{id:"Count"}}}},B:{block:{type:"math_number",fields:{NUM:1}}}}}}}}}}}}}}}]},variables:[{name:"Count",id:"Count"}]};
